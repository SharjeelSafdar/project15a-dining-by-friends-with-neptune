name: Deploy GraphQL Api with Event Driven Architecture  with ApiGateway, EventBridge and SNS

# Controls when the action will run. Triggers the workflow on
# 1) push event for main branch
# 2) pull_request generated on main branch
# 3) It's triggered only by changes in relavent files only
on:
  push:
    branch: [main]
    paths-ignore:
      - "README.md"
      - ".gitignore"
      - ".npmignore"
      - "logicalModelWithHackolade/**"
  pull_request:
    branch: [main]
    paths-ignore:
      - "README.md"
      - ".gitignore"
      - ".npmignore"
      - "logicalModelWithHackolade/**"

jobs:
  Deploy-API:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with: { node-version: "14.15.0" }

      - name: Install Dependencies for CDK App
        uses: bahmutov/npm-install@v1

      - name: Install Dependencies for Queries Lambda
        uses: bahmutov/npm-install@v1
        with:
          working-directory: lambdaFns/appSyncQueryLambda

      - name: Install Dependencies for Mutations Lambda
        uses: bahmutov/npm-install@v1
        with:
          working-directory: lambdaFns/appSyncMutationLambda

      - name: Install Dependencies for New Person Lambda
        uses: bahmutov/npm-install@v1
        with:
          working-directory: lambdaFns/newPerson

      - name: Build CDK App with TypeScript Compiler
        run: npm run build

      - name: Run Tests with Jest
        run: npm run test -- -u

      - name: Deploy DiningByFriends API Stack to AWS CloudFormation
        uses: docker://kikemnzz/automate-cdk-github-action-kmzz:v1.0.0
        with:
          cdk_version: 1.115.0
          cdk_action: deploy
          cdk_stack: Project15ADiningByFriendsWithNeptuneStack
          cdk_stack_directory: .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_PROJECT_REGION }}

  Run-Karate-Tests:
    needs: Deploy_API
    runs-on: windows-latest

    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2

      - name: Install JBang for Setting Up Java Environment
        run: |
          iwr -useb get.scoop.sh | iex
          scoop bucket add jbangdev https://github.com/jbangdev/scoop-bucket
          scoop install jbang

      - name: Run Karate Tests for AppSync API Queries
        run: jbang karate@intuit/karate test/queries.feature

      - name: Run Karate Tests for AppSync API Mutations
        run: jbang karate@intuit/karate test/mutations.feature
